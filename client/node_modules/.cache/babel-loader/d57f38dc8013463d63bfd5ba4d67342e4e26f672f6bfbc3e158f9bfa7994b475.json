{"ast":null,"code":"import { T as TRPCClientError } from './TRPCClientError-38f9a32a.mjs';\nconst isFunction = fn => typeof fn === 'function';\nfunction getFetch(customFetchImpl) {\n  if (customFetchImpl) {\n    return customFetchImpl;\n  }\n  if (typeof window !== 'undefined' && isFunction(window.fetch)) {\n    return window.fetch;\n  }\n  if (typeof globalThis !== 'undefined' && isFunction(globalThis.fetch)) {\n    return globalThis.fetch;\n  }\n  throw new Error('No fetch implementation found');\n}\nfunction getAbortController(customAbortControllerImpl) {\n  if (customAbortControllerImpl) {\n    return customAbortControllerImpl;\n  }\n  // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n  if (typeof window !== 'undefined' && window.AbortController) {\n    return window.AbortController;\n  }\n  // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n  if (typeof globalThis !== 'undefined' && globalThis.AbortController) {\n    return globalThis.AbortController;\n  }\n  return null;\n}\nfunction resolveHTTPLinkOptions(opts) {\n  return {\n    url: opts.url.toString().replace(/\\/$/, ''),\n    fetch: opts.fetch,\n    AbortController: getAbortController(opts.AbortController)\n  };\n}\n// https://github.com/trpc/trpc/pull/669\nfunction arrayToDict(array) {\n  const dict = {};\n  for (let index = 0; index < array.length; index++) {\n    const element = array[index];\n    dict[index] = element;\n  }\n  return dict;\n}\nconst METHOD = {\n  query: 'GET',\n  mutation: 'POST'\n};\nfunction getInput(opts) {\n  return 'input' in opts ? opts.runtime.transformer.serialize(opts.input) : arrayToDict(opts.inputs.map(_input => opts.runtime.transformer.serialize(_input)));\n}\nconst getUrl = opts => {\n  let url = opts.url + '/' + opts.path;\n  const queryParts = [];\n  if ('inputs' in opts) {\n    queryParts.push('batch=1');\n  }\n  if (opts.type === 'query') {\n    const input = getInput(opts);\n    if (input !== undefined) {\n      queryParts.push(`input=${encodeURIComponent(JSON.stringify(input))}`);\n    }\n  }\n  if (queryParts.length) {\n    url += '?' + queryParts.join('&');\n  }\n  return url;\n};\nconst getBody = opts => {\n  if (opts.type === 'query') {\n    return undefined;\n  }\n  const input = getInput(opts);\n  return input !== undefined ? JSON.stringify(input) : undefined;\n};\nconst jsonHttpRequester = opts => {\n  return httpRequest({\n    ...opts,\n    contentTypeHeader: 'application/json',\n    getUrl,\n    getBody\n  });\n};\nasync function fetchHTTPResponse(opts, ac) {\n  const url = opts.getUrl(opts);\n  const body = opts.getBody(opts);\n  const {\n    type\n  } = opts;\n  const resolvedHeaders = await opts.headers();\n  /* istanbul ignore if -- @preserve */\n  if (type === 'subscription') {\n    throw new Error('Subscriptions should use wsLink');\n  }\n  const headers = {\n    ...(opts.contentTypeHeader ? {\n      'content-type': opts.contentTypeHeader\n    } : {}),\n    ...(opts.batchModeHeader ? {\n      'trpc-batch-mode': opts.batchModeHeader\n    } : {}),\n    ...resolvedHeaders\n  };\n  return getFetch(opts.fetch)(url, {\n    method: METHOD[type],\n    signal: ac?.signal,\n    body: body,\n    headers\n  });\n}\nfunction httpRequest(opts) {\n  const ac = opts.AbortController ? new opts.AbortController() : null;\n  const meta = {};\n  let done = false;\n  const promise = new Promise((resolve, reject) => {\n    fetchHTTPResponse(opts, ac).then(_res => {\n      meta.response = _res;\n      done = true;\n      return _res.json();\n    }).then(json => {\n      meta.responseJSON = json;\n      resolve({\n        json: json,\n        meta\n      });\n    }).catch(err => {\n      done = true;\n      reject(TRPCClientError.from(err, {\n        meta\n      }));\n    });\n  });\n  const cancel = () => {\n    if (!done) {\n      ac?.abort();\n    }\n  };\n  return {\n    promise,\n    cancel\n  };\n}\nexport { getBody as a, getFetch as b, fetchHTTPResponse as f, getUrl as g, httpRequest as h, jsonHttpRequester as j, resolveHTTPLinkOptions as r };","map":{"version":3,"names":["T","TRPCClientError","isFunction","fn","getFetch","customFetchImpl","window","fetch","globalThis","Error","getAbortController","customAbortControllerImpl","AbortController","resolveHTTPLinkOptions","opts","url","toString","replace","arrayToDict","array","dict","index","length","element","METHOD","query","mutation","getInput","runtime","transformer","serialize","input","inputs","map","_input","getUrl","path","queryParts","push","type","undefined","encodeURIComponent","JSON","stringify","join","getBody","jsonHttpRequester","httpRequest","contentTypeHeader","fetchHTTPResponse","ac","body","resolvedHeaders","headers","batchModeHeader","method","signal","meta","done","promise","Promise","resolve","reject","then","_res","response","json","responseJSON","catch","err","from","cancel","abort","a","b","f","g","h","j","r"],"sources":["/Users/danilakiva/jspool/s21_arcade_games/node_modules/@trpc/client/dist/httpUtils-b9d0cb48.mjs"],"sourcesContent":["import { T as TRPCClientError } from './TRPCClientError-38f9a32a.mjs';\n\nconst isFunction = (fn)=>typeof fn === 'function';\nfunction getFetch(customFetchImpl) {\n    if (customFetchImpl) {\n        return customFetchImpl;\n    }\n    if (typeof window !== 'undefined' && isFunction(window.fetch)) {\n        return window.fetch;\n    }\n    if (typeof globalThis !== 'undefined' && isFunction(globalThis.fetch)) {\n        return globalThis.fetch;\n    }\n    throw new Error('No fetch implementation found');\n}\n\nfunction getAbortController(customAbortControllerImpl) {\n    if (customAbortControllerImpl) {\n        return customAbortControllerImpl;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (typeof window !== 'undefined' && window.AbortController) {\n        return window.AbortController;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (typeof globalThis !== 'undefined' && globalThis.AbortController) {\n        return globalThis.AbortController;\n    }\n    return null;\n}\n\nfunction resolveHTTPLinkOptions(opts) {\n    return {\n        url: opts.url.toString().replace(/\\/$/, ''),\n        fetch: opts.fetch,\n        AbortController: getAbortController(opts.AbortController)\n    };\n}\n// https://github.com/trpc/trpc/pull/669\nfunction arrayToDict(array) {\n    const dict = {};\n    for(let index = 0; index < array.length; index++){\n        const element = array[index];\n        dict[index] = element;\n    }\n    return dict;\n}\nconst METHOD = {\n    query: 'GET',\n    mutation: 'POST'\n};\nfunction getInput(opts) {\n    return 'input' in opts ? opts.runtime.transformer.serialize(opts.input) : arrayToDict(opts.inputs.map((_input)=>opts.runtime.transformer.serialize(_input)));\n}\nconst getUrl = (opts)=>{\n    let url = opts.url + '/' + opts.path;\n    const queryParts = [];\n    if ('inputs' in opts) {\n        queryParts.push('batch=1');\n    }\n    if (opts.type === 'query') {\n        const input = getInput(opts);\n        if (input !== undefined) {\n            queryParts.push(`input=${encodeURIComponent(JSON.stringify(input))}`);\n        }\n    }\n    if (queryParts.length) {\n        url += '?' + queryParts.join('&');\n    }\n    return url;\n};\nconst getBody = (opts)=>{\n    if (opts.type === 'query') {\n        return undefined;\n    }\n    const input = getInput(opts);\n    return input !== undefined ? JSON.stringify(input) : undefined;\n};\nconst jsonHttpRequester = (opts)=>{\n    return httpRequest({\n        ...opts,\n        contentTypeHeader: 'application/json',\n        getUrl,\n        getBody\n    });\n};\nasync function fetchHTTPResponse(opts, ac) {\n    const url = opts.getUrl(opts);\n    const body = opts.getBody(opts);\n    const { type  } = opts;\n    const resolvedHeaders = await opts.headers();\n    /* istanbul ignore if -- @preserve */ if (type === 'subscription') {\n        throw new Error('Subscriptions should use wsLink');\n    }\n    const headers = {\n        ...opts.contentTypeHeader ? {\n            'content-type': opts.contentTypeHeader\n        } : {},\n        ...opts.batchModeHeader ? {\n            'trpc-batch-mode': opts.batchModeHeader\n        } : {},\n        ...resolvedHeaders\n    };\n    return getFetch(opts.fetch)(url, {\n        method: METHOD[type],\n        signal: ac?.signal,\n        body: body,\n        headers\n    });\n}\nfunction httpRequest(opts) {\n    const ac = opts.AbortController ? new opts.AbortController() : null;\n    const meta = {};\n    let done = false;\n    const promise = new Promise((resolve, reject)=>{\n        fetchHTTPResponse(opts, ac).then((_res)=>{\n            meta.response = _res;\n            done = true;\n            return _res.json();\n        }).then((json)=>{\n            meta.responseJSON = json;\n            resolve({\n                json: json,\n                meta\n            });\n        }).catch((err)=>{\n            done = true;\n            reject(TRPCClientError.from(err, {\n                meta\n            }));\n        });\n    });\n    const cancel = ()=>{\n        if (!done) {\n            ac?.abort();\n        }\n    };\n    return {\n        promise,\n        cancel\n    };\n}\n\nexport { getBody as a, getFetch as b, fetchHTTPResponse as f, getUrl as g, httpRequest as h, jsonHttpRequester as j, resolveHTTPLinkOptions as r };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}