{"ast":null,"code":"import { observable } from '@trpc/server/observable';\nimport { t as transformResult } from '../transformResult-ace864b8.mjs';\nimport { T as TRPCClientError } from '../TRPCClientError-38f9a32a.mjs';\nimport { r as resolveHTTPLinkOptions, j as jsonHttpRequester } from '../httpUtils-b9d0cb48.mjs';\nimport '@trpc/server/shared';\nfunction httpLinkFactory(factoryOpts) {\n  return opts => {\n    const resolvedOpts = resolveHTTPLinkOptions(opts);\n    return runtime => ({\n      op\n    }) => observable(observer => {\n      const {\n        path,\n        input,\n        type\n      } = op;\n      const {\n        promise,\n        cancel\n      } = factoryOpts.requester({\n        ...resolvedOpts,\n        runtime,\n        type,\n        path,\n        input,\n        headers() {\n          if (!opts.headers) {\n            return {};\n          }\n          if (typeof opts.headers === 'function') {\n            return opts.headers({\n              op\n            });\n          }\n          return opts.headers;\n        }\n      });\n      let meta = undefined;\n      promise.then(res => {\n        meta = res.meta;\n        const transformed = transformResult(res.json, runtime);\n        if (!transformed.ok) {\n          observer.error(TRPCClientError.from(transformed.error, {\n            meta\n          }));\n          return;\n        }\n        observer.next({\n          context: res.meta,\n          result: transformed.result\n        });\n        observer.complete();\n      }).catch(cause => {\n        observer.error(TRPCClientError.from(cause, {\n          meta\n        }));\n      });\n      return () => {\n        cancel();\n      };\n    });\n  };\n}\n/**\n * @see https://trpc.io/docs/client/links/httpLink\n */\nconst httpLink = httpLinkFactory({\n  requester: jsonHttpRequester\n});\nexport { httpLink, httpLinkFactory };","map":{"version":3,"names":["observable","t","transformResult","T","TRPCClientError","r","resolveHTTPLinkOptions","j","jsonHttpRequester","httpLinkFactory","factoryOpts","opts","resolvedOpts","runtime","op","observer","path","input","type","promise","cancel","requester","headers","meta","undefined","then","res","transformed","json","ok","error","from","next","context","result","complete","catch","cause","httpLink"],"sources":["/Users/danilakiva/jspool/s21_arcade_games/node_modules/@trpc/client/dist/links/httpLink.mjs"],"sourcesContent":["import { observable } from '@trpc/server/observable';\nimport { t as transformResult } from '../transformResult-ace864b8.mjs';\nimport { T as TRPCClientError } from '../TRPCClientError-38f9a32a.mjs';\nimport { r as resolveHTTPLinkOptions, j as jsonHttpRequester } from '../httpUtils-b9d0cb48.mjs';\nimport '@trpc/server/shared';\n\nfunction httpLinkFactory(factoryOpts) {\n    return (opts)=>{\n        const resolvedOpts = resolveHTTPLinkOptions(opts);\n        return (runtime)=>({ op  })=>observable((observer)=>{\n                    const { path , input , type  } = op;\n                    const { promise , cancel  } = factoryOpts.requester({\n                        ...resolvedOpts,\n                        runtime,\n                        type,\n                        path,\n                        input,\n                        headers () {\n                            if (!opts.headers) {\n                                return {};\n                            }\n                            if (typeof opts.headers === 'function') {\n                                return opts.headers({\n                                    op\n                                });\n                            }\n                            return opts.headers;\n                        }\n                    });\n                    let meta = undefined;\n                    promise.then((res)=>{\n                        meta = res.meta;\n                        const transformed = transformResult(res.json, runtime);\n                        if (!transformed.ok) {\n                            observer.error(TRPCClientError.from(transformed.error, {\n                                meta\n                            }));\n                            return;\n                        }\n                        observer.next({\n                            context: res.meta,\n                            result: transformed.result\n                        });\n                        observer.complete();\n                    }).catch((cause)=>{\n                        observer.error(TRPCClientError.from(cause, {\n                            meta\n                        }));\n                    });\n                    return ()=>{\n                        cancel();\n                    };\n                });\n    };\n}\n/**\n * @see https://trpc.io/docs/client/links/httpLink\n */ const httpLink = httpLinkFactory({\n    requester: jsonHttpRequester\n});\n\nexport { httpLink, httpLinkFactory };\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,yBAAyB;AACpD,SAASC,CAAC,IAAIC,eAAe,QAAQ,iCAAiC;AACtE,SAASC,CAAC,IAAIC,eAAe,QAAQ,iCAAiC;AACtE,SAASC,CAAC,IAAIC,sBAAsB,EAAEC,CAAC,IAAIC,iBAAiB,QAAQ,2BAA2B;AAC/F,OAAO,qBAAqB;AAE5B,SAASC,eAAeA,CAACC,WAAW,EAAE;EAClC,OAAQC,IAAI,IAAG;IACX,MAAMC,YAAY,GAAGN,sBAAsB,CAACK,IAAI,CAAC;IACjD,OAAQE,OAAO,IAAG,CAAC;MAAEC;IAAI,CAAC,KAAGd,UAAU,CAAEe,QAAQ,IAAG;MACxC,MAAM;QAAEC,IAAI;QAAGC,KAAK;QAAGC;MAAM,CAAC,GAAGJ,EAAE;MACnC,MAAM;QAAEK,OAAO;QAAGC;MAAQ,CAAC,GAAGV,WAAW,CAACW,SAAS,CAAC;QAChD,GAAGT,YAAY;QACfC,OAAO;QACPK,IAAI;QACJF,IAAI;QACJC,KAAK;QACLK,OAAOA,CAAA,EAAI;UACP,IAAI,CAACX,IAAI,CAACW,OAAO,EAAE;YACf,OAAO,CAAC,CAAC;UACb;UACA,IAAI,OAAOX,IAAI,CAACW,OAAO,KAAK,UAAU,EAAE;YACpC,OAAOX,IAAI,CAACW,OAAO,CAAC;cAChBR;YACJ,CAAC,CAAC;UACN;UACA,OAAOH,IAAI,CAACW,OAAO;QACvB;MACJ,CAAC,CAAC;MACF,IAAIC,IAAI,GAAGC,SAAS;MACpBL,OAAO,CAACM,IAAI,CAAEC,GAAG,IAAG;QAChBH,IAAI,GAAGG,GAAG,CAACH,IAAI;QACf,MAAMI,WAAW,GAAGzB,eAAe,CAACwB,GAAG,CAACE,IAAI,EAAEf,OAAO,CAAC;QACtD,IAAI,CAACc,WAAW,CAACE,EAAE,EAAE;UACjBd,QAAQ,CAACe,KAAK,CAAC1B,eAAe,CAAC2B,IAAI,CAACJ,WAAW,CAACG,KAAK,EAAE;YACnDP;UACJ,CAAC,CAAC,CAAC;UACH;QACJ;QACAR,QAAQ,CAACiB,IAAI,CAAC;UACVC,OAAO,EAAEP,GAAG,CAACH,IAAI;UACjBW,MAAM,EAAEP,WAAW,CAACO;QACxB,CAAC,CAAC;QACFnB,QAAQ,CAACoB,QAAQ,CAAC,CAAC;MACvB,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAG;QACdtB,QAAQ,CAACe,KAAK,CAAC1B,eAAe,CAAC2B,IAAI,CAACM,KAAK,EAAE;UACvCd;QACJ,CAAC,CAAC,CAAC;MACP,CAAC,CAAC;MACF,OAAO,MAAI;QACPH,MAAM,CAAC,CAAC;MACZ,CAAC;IACL,CAAC,CAAC;EACd,CAAC;AACL;AACA;AACA;AACA;AAAI,MAAMkB,QAAQ,GAAG7B,eAAe,CAAC;EACjCY,SAAS,EAAEb;AACf,CAAC,CAAC;AAEF,SAAS8B,QAAQ,EAAE7B,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}