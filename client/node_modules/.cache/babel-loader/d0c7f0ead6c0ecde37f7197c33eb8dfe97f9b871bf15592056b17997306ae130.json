{"ast":null,"code":"/**\n * @internal\n */function invert(obj) {\n  const newObj = Object.create(null);\n  for (const key in obj) {\n    const v = obj[key];\n    newObj[v] = key;\n  }\n  return newObj;\n}\n\n// reference: https://www.jsonrpc.org/specification\n/**\n * JSON-RPC 2.0 Error codes\n *\n * `-32000` to `-32099` are reserved for implementation-defined server-errors.\n * For tRPC we're copying the last digits of HTTP 4XX errors.\n */\nconst TRPC_ERROR_CODES_BY_KEY = {\n  /**\n  * Invalid JSON was received by the server.\n  * An error occurred on the server while parsing the JSON text.\n  */\n  PARSE_ERROR: -32700,\n  /**\n  * The JSON sent is not a valid Request object.\n  */\n  BAD_REQUEST: -32600,\n  // Internal JSON-RPC error\n  INTERNAL_SERVER_ERROR: -32603,\n  NOT_IMPLEMENTED: -32603,\n  // Implementation specific errors\n  UNAUTHORIZED: -32001,\n  FORBIDDEN: -32003,\n  NOT_FOUND: -32004,\n  METHOD_NOT_SUPPORTED: -32005,\n  TIMEOUT: -32008,\n  CONFLICT: -32009,\n  PRECONDITION_FAILED: -32012,\n  PAYLOAD_TOO_LARGE: -32013,\n  UNPROCESSABLE_CONTENT: -32022,\n  TOO_MANY_REQUESTS: -32029,\n  CLIENT_CLOSED_REQUEST: -32099\n};\nconst TRPC_ERROR_CODES_BY_NUMBER = invert(TRPC_ERROR_CODES_BY_KEY);\nexport { TRPC_ERROR_CODES_BY_KEY as T, TRPC_ERROR_CODES_BY_NUMBER as a, invert as i };","map":{"version":3,"names":["invert","obj","newObj","Object","create","key","v","TRPC_ERROR_CODES_BY_KEY","PARSE_ERROR","BAD_REQUEST","INTERNAL_SERVER_ERROR","NOT_IMPLEMENTED","UNAUTHORIZED","FORBIDDEN","NOT_FOUND","METHOD_NOT_SUPPORTED","TIMEOUT","CONFLICT","PRECONDITION_FAILED","PAYLOAD_TOO_LARGE","UNPROCESSABLE_CONTENT","TOO_MANY_REQUESTS","CLIENT_CLOSED_REQUEST","TRPC_ERROR_CODES_BY_NUMBER","T","a","i"],"sources":["/Users/danilakiva/jspool/s21_arcade_games/client/node_modules/@trpc/server/dist/codes-c924c3db.mjs"],"sourcesContent":["/**\n * @internal\n */ function invert(obj) {\n    const newObj = Object.create(null);\n    for(const key in obj){\n        const v = obj[key];\n        newObj[v] = key;\n    }\n    return newObj;\n}\n\n// reference: https://www.jsonrpc.org/specification\n/**\n * JSON-RPC 2.0 Error codes\n *\n * `-32000` to `-32099` are reserved for implementation-defined server-errors.\n * For tRPC we're copying the last digits of HTTP 4XX errors.\n */ const TRPC_ERROR_CODES_BY_KEY = {\n    /**\n   * Invalid JSON was received by the server.\n   * An error occurred on the server while parsing the JSON text.\n   */ PARSE_ERROR: -32700,\n    /**\n   * The JSON sent is not a valid Request object.\n   */ BAD_REQUEST: -32600,\n    // Internal JSON-RPC error\n    INTERNAL_SERVER_ERROR: -32603,\n    NOT_IMPLEMENTED: -32603,\n    // Implementation specific errors\n    UNAUTHORIZED: -32001,\n    FORBIDDEN: -32003,\n    NOT_FOUND: -32004,\n    METHOD_NOT_SUPPORTED: -32005,\n    TIMEOUT: -32008,\n    CONFLICT: -32009,\n    PRECONDITION_FAILED: -32012,\n    PAYLOAD_TOO_LARGE: -32013,\n    UNPROCESSABLE_CONTENT: -32022,\n    TOO_MANY_REQUESTS: -32029,\n    CLIENT_CLOSED_REQUEST: -32099\n};\nconst TRPC_ERROR_CODES_BY_NUMBER = invert(TRPC_ERROR_CODES_BY_KEY);\n\nexport { TRPC_ERROR_CODES_BY_KEY as T, TRPC_ERROR_CODES_BY_NUMBER as a, invert as i };\n"],"mappings":"AAAA;AACA;AACA,GAAI,SAASA,MAAMA,CAACC,GAAG,EAAE;EACrB,MAAMC,MAAM,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EAClC,KAAI,MAAMC,GAAG,IAAIJ,GAAG,EAAC;IACjB,MAAMK,CAAC,GAAGL,GAAG,CAACI,GAAG,CAAC;IAClBH,MAAM,CAACI,CAAC,CAAC,GAAGD,GAAG;EACnB;EACA,OAAOH,MAAM;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,MAAMK,uBAAuB,GAAG;EAChC;AACJ;AACA;AACA;EAAMC,WAAW,EAAE,CAAC,KAAK;EACrB;AACJ;AACA;EAAMC,WAAW,EAAE,CAAC,KAAK;EACrB;EACAC,qBAAqB,EAAE,CAAC,KAAK;EAC7BC,eAAe,EAAE,CAAC,KAAK;EACvB;EACAC,YAAY,EAAE,CAAC,KAAK;EACpBC,SAAS,EAAE,CAAC,KAAK;EACjBC,SAAS,EAAE,CAAC,KAAK;EACjBC,oBAAoB,EAAE,CAAC,KAAK;EAC5BC,OAAO,EAAE,CAAC,KAAK;EACfC,QAAQ,EAAE,CAAC,KAAK;EAChBC,mBAAmB,EAAE,CAAC,KAAK;EAC3BC,iBAAiB,EAAE,CAAC,KAAK;EACzBC,qBAAqB,EAAE,CAAC,KAAK;EAC7BC,iBAAiB,EAAE,CAAC,KAAK;EACzBC,qBAAqB,EAAE,CAAC;AAC5B,CAAC;AACD,MAAMC,0BAA0B,GAAGvB,MAAM,CAACO,uBAAuB,CAAC;AAElE,SAASA,uBAAuB,IAAIiB,CAAC,EAAED,0BAA0B,IAAIE,CAAC,EAAEzB,MAAM,IAAI0B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}