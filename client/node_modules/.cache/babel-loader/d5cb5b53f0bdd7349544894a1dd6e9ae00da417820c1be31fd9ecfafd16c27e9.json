{"ast":null,"code":"export { i as isObservable, o as observable } from '../observable-ade1bad8.mjs';\nfunction share(_opts) {\n  return originalObserver => {\n    let refCount = 0;\n    let subscription = null;\n    const observers = [];\n    function startIfNeeded() {\n      if (subscription) {\n        return;\n      }\n      subscription = originalObserver.subscribe({\n        next(value) {\n          for (const observer of observers) {\n            observer.next?.(value);\n          }\n        },\n        error(error) {\n          for (const observer of observers) {\n            observer.error?.(error);\n          }\n        },\n        complete() {\n          for (const observer of observers) {\n            observer.complete?.();\n          }\n        }\n      });\n    }\n    function resetIfNeeded() {\n      // \"resetOnRefCountZero\"\n      if (refCount === 0 && subscription) {\n        const _sub = subscription;\n        subscription = null;\n        _sub.unsubscribe();\n      }\n    }\n    return {\n      subscribe(observer) {\n        refCount++;\n        observers.push(observer);\n        startIfNeeded();\n        return {\n          unsubscribe() {\n            refCount--;\n            resetIfNeeded();\n            const index = observers.findIndex(v => v === observer);\n            if (index > -1) {\n              observers.splice(index, 1);\n            }\n          }\n        };\n      }\n    };\n  };\n}\nfunction map(project) {\n  return originalObserver => {\n    return {\n      subscribe(observer) {\n        let index = 0;\n        const subscription = originalObserver.subscribe({\n          next(value) {\n            observer.next?.(project(value, index++));\n          },\n          error(error) {\n            observer.error?.(error);\n          },\n          complete() {\n            observer.complete?.();\n          }\n        });\n        return subscription;\n      }\n    };\n  };\n}\nfunction tap(observer) {\n  return originalObserver => {\n    return {\n      subscribe(observer2) {\n        return originalObserver.subscribe({\n          next(v) {\n            observer.next?.(v);\n            observer2.next?.(v);\n          },\n          error(v) {\n            observer.error?.(v);\n            observer2.error?.(v);\n          },\n          complete() {\n            observer.complete?.();\n            observer2.complete?.();\n          }\n        });\n      }\n    };\n  };\n}\nclass ObservableAbortError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'ObservableAbortError';\n    Object.setPrototypeOf(this, ObservableAbortError.prototype);\n  }\n}\n/** @internal */\nfunction observableToPromise(observable) {\n  let abort;\n  const promise = new Promise((resolve, reject) => {\n    let isDone = false;\n    function onDone() {\n      if (isDone) {\n        return;\n      }\n      isDone = true;\n      reject(new ObservableAbortError('This operation was aborted.'));\n      obs$.unsubscribe();\n    }\n    const obs$ = observable.subscribe({\n      next(data) {\n        isDone = true;\n        resolve(data);\n        onDone();\n      },\n      error(data) {\n        isDone = true;\n        reject(data);\n        onDone();\n      },\n      complete() {\n        isDone = true;\n        onDone();\n      }\n    });\n    abort = onDone;\n  });\n  return {\n    promise,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    abort: abort\n  };\n}\nexport { map, observableToPromise, share, tap };","map":{"version":3,"names":["i","isObservable","o","observable","share","_opts","originalObserver","refCount","subscription","observers","startIfNeeded","subscribe","next","value","observer","error","complete","resetIfNeeded","_sub","unsubscribe","push","index","findIndex","v","splice","map","project","tap","observer2","ObservableAbortError","Error","constructor","message","name","Object","setPrototypeOf","prototype","observableToPromise","abort","promise","Promise","resolve","reject","isDone","onDone","obs$","data"],"sources":["/Users/danilakiva/jspool/s21_arcade_games/node_modules/@trpc/server/dist/observable/index.mjs"],"sourcesContent":["export { i as isObservable, o as observable } from '../observable-ade1bad8.mjs';\n\nfunction share(_opts) {\n    return (originalObserver)=>{\n        let refCount = 0;\n        let subscription = null;\n        const observers = [];\n        function startIfNeeded() {\n            if (subscription) {\n                return;\n            }\n            subscription = originalObserver.subscribe({\n                next (value) {\n                    for (const observer of observers){\n                        observer.next?.(value);\n                    }\n                },\n                error (error) {\n                    for (const observer of observers){\n                        observer.error?.(error);\n                    }\n                },\n                complete () {\n                    for (const observer of observers){\n                        observer.complete?.();\n                    }\n                }\n            });\n        }\n        function resetIfNeeded() {\n            // \"resetOnRefCountZero\"\n            if (refCount === 0 && subscription) {\n                const _sub = subscription;\n                subscription = null;\n                _sub.unsubscribe();\n            }\n        }\n        return {\n            subscribe (observer) {\n                refCount++;\n                observers.push(observer);\n                startIfNeeded();\n                return {\n                    unsubscribe () {\n                        refCount--;\n                        resetIfNeeded();\n                        const index = observers.findIndex((v)=>v === observer);\n                        if (index > -1) {\n                            observers.splice(index, 1);\n                        }\n                    }\n                };\n            }\n        };\n    };\n}\n\nfunction map(project) {\n    return (originalObserver)=>{\n        return {\n            subscribe (observer) {\n                let index = 0;\n                const subscription = originalObserver.subscribe({\n                    next (value) {\n                        observer.next?.(project(value, index++));\n                    },\n                    error (error) {\n                        observer.error?.(error);\n                    },\n                    complete () {\n                        observer.complete?.();\n                    }\n                });\n                return subscription;\n            }\n        };\n    };\n}\n\nfunction tap(observer) {\n    return (originalObserver)=>{\n        return {\n            subscribe (observer2) {\n                return originalObserver.subscribe({\n                    next (v) {\n                        observer.next?.(v);\n                        observer2.next?.(v);\n                    },\n                    error (v) {\n                        observer.error?.(v);\n                        observer2.error?.(v);\n                    },\n                    complete () {\n                        observer.complete?.();\n                        observer2.complete?.();\n                    }\n                });\n            }\n        };\n    };\n}\n\nclass ObservableAbortError extends Error {\n    constructor(message){\n        super(message);\n        this.name = 'ObservableAbortError';\n        Object.setPrototypeOf(this, ObservableAbortError.prototype);\n    }\n}\n/** @internal */ function observableToPromise(observable) {\n    let abort;\n    const promise = new Promise((resolve, reject)=>{\n        let isDone = false;\n        function onDone() {\n            if (isDone) {\n                return;\n            }\n            isDone = true;\n            reject(new ObservableAbortError('This operation was aborted.'));\n            obs$.unsubscribe();\n        }\n        const obs$ = observable.subscribe({\n            next (data) {\n                isDone = true;\n                resolve(data);\n                onDone();\n            },\n            error (data) {\n                isDone = true;\n                reject(data);\n                onDone();\n            },\n            complete () {\n                isDone = true;\n                onDone();\n            }\n        });\n        abort = onDone;\n    });\n    return {\n        promise,\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        abort: abort\n    };\n}\n\nexport { map, observableToPromise, share, tap };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}