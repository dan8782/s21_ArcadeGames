{"ast":null,"code":"import { i as invert, T as TRPC_ERROR_CODES_BY_KEY } from './codes-c924c3db.mjs';\nconst TRPC_ERROR_CODES_BY_NUMBER = invert(TRPC_ERROR_CODES_BY_KEY);\nconst JSONRPC2_TO_HTTP_CODE = {\n  PARSE_ERROR: 400,\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  NOT_FOUND: 404,\n  FORBIDDEN: 403,\n  METHOD_NOT_SUPPORTED: 405,\n  TIMEOUT: 408,\n  CONFLICT: 409,\n  PRECONDITION_FAILED: 412,\n  PAYLOAD_TOO_LARGE: 413,\n  UNPROCESSABLE_CONTENT: 422,\n  TOO_MANY_REQUESTS: 429,\n  CLIENT_CLOSED_REQUEST: 499,\n  INTERNAL_SERVER_ERROR: 500,\n  NOT_IMPLEMENTED: 501\n};\nfunction getStatusCodeFromKey(code) {\n  return JSONRPC2_TO_HTTP_CODE[code] ?? 500;\n}\nfunction getHTTPStatusCode(json) {\n  const arr = Array.isArray(json) ? json : [json];\n  const httpStatuses = new Set(arr.map(res => {\n    if ('error' in res) {\n      const data = res.error.data;\n      if (typeof data.httpStatus === 'number') {\n        return data.httpStatus;\n      }\n      const code = TRPC_ERROR_CODES_BY_NUMBER[res.error.code];\n      return getStatusCodeFromKey(code);\n    }\n    return 200;\n  }));\n  if (httpStatuses.size !== 1) {\n    return 207;\n  }\n  const httpStatus = httpStatuses.values().next().value;\n  return httpStatus;\n}\nfunction getHTTPStatusCodeFromError(error) {\n  return getStatusCodeFromKey(error.code);\n}\nconst noop = () => {\n  // noop\n};\nfunction createInnerProxy(callback, path) {\n  const proxy = new Proxy(noop, {\n    get(_obj, key) {\n      if (typeof key !== 'string' || key === 'then') {\n        // special case for if the proxy is accidentally treated\n        // like a PromiseLike (like in `Promise.resolve(proxy)`)\n        return undefined;\n      }\n      return createInnerProxy(callback, [...path, key]);\n    },\n    apply(_1, _2, args) {\n      const isApply = path[path.length - 1] === 'apply';\n      return callback({\n        args: isApply ? args.length >= 2 ? args[1] : [] : args,\n        path: isApply ? path.slice(0, -1) : path\n      });\n    }\n  });\n  return proxy;\n}\n/**\n * Creates a proxy that calls the callback with the path and arguments\n *\n * @internal\n */\nconst createRecursiveProxy = callback => createInnerProxy(callback, []);\n/**\n * Used in place of `new Proxy` where each handler will map 1 level deep to another value.\n *\n * @internal\n */\nconst createFlatProxy = callback => {\n  return new Proxy(noop, {\n    get(_obj, name) {\n      if (typeof name !== 'string' || name === 'then') {\n        // special case for if the proxy is accidentally treated\n        // like a PromiseLike (like in `Promise.resolve(proxy)`)\n        return undefined;\n      }\n      return callback(name);\n    }\n  });\n};\nexport { TRPC_ERROR_CODES_BY_NUMBER as T, createRecursiveProxy as a, getHTTPStatusCode as b, createFlatProxy as c, getHTTPStatusCodeFromError as g };","map":{"version":3,"names":["i","invert","T","TRPC_ERROR_CODES_BY_KEY","TRPC_ERROR_CODES_BY_NUMBER","JSONRPC2_TO_HTTP_CODE","PARSE_ERROR","BAD_REQUEST","UNAUTHORIZED","NOT_FOUND","FORBIDDEN","METHOD_NOT_SUPPORTED","TIMEOUT","CONFLICT","PRECONDITION_FAILED","PAYLOAD_TOO_LARGE","UNPROCESSABLE_CONTENT","TOO_MANY_REQUESTS","CLIENT_CLOSED_REQUEST","INTERNAL_SERVER_ERROR","NOT_IMPLEMENTED","getStatusCodeFromKey","code","getHTTPStatusCode","json","arr","Array","isArray","httpStatuses","Set","map","res","data","error","httpStatus","size","values","next","value","getHTTPStatusCodeFromError","noop","createInnerProxy","callback","path","proxy","Proxy","get","_obj","key","undefined","apply","_1","_2","args","isApply","length","slice","createRecursiveProxy","createFlatProxy","name","a","b","c","g"],"sources":["/Users/danilakiva/jspool/s21_arcade_games/client/node_modules/@trpc/server/dist/index-f91d720c.mjs"],"sourcesContent":["import { i as invert, T as TRPC_ERROR_CODES_BY_KEY } from './codes-c924c3db.mjs';\n\nconst TRPC_ERROR_CODES_BY_NUMBER = invert(TRPC_ERROR_CODES_BY_KEY);\nconst JSONRPC2_TO_HTTP_CODE = {\n    PARSE_ERROR: 400,\n    BAD_REQUEST: 400,\n    UNAUTHORIZED: 401,\n    NOT_FOUND: 404,\n    FORBIDDEN: 403,\n    METHOD_NOT_SUPPORTED: 405,\n    TIMEOUT: 408,\n    CONFLICT: 409,\n    PRECONDITION_FAILED: 412,\n    PAYLOAD_TOO_LARGE: 413,\n    UNPROCESSABLE_CONTENT: 422,\n    TOO_MANY_REQUESTS: 429,\n    CLIENT_CLOSED_REQUEST: 499,\n    INTERNAL_SERVER_ERROR: 500,\n    NOT_IMPLEMENTED: 501\n};\nfunction getStatusCodeFromKey(code) {\n    return JSONRPC2_TO_HTTP_CODE[code] ?? 500;\n}\nfunction getHTTPStatusCode(json) {\n    const arr = Array.isArray(json) ? json : [\n        json\n    ];\n    const httpStatuses = new Set(arr.map((res)=>{\n        if ('error' in res) {\n            const data = res.error.data;\n            if (typeof data.httpStatus === 'number') {\n                return data.httpStatus;\n            }\n            const code = TRPC_ERROR_CODES_BY_NUMBER[res.error.code];\n            return getStatusCodeFromKey(code);\n        }\n        return 200;\n    }));\n    if (httpStatuses.size !== 1) {\n        return 207;\n    }\n    const httpStatus = httpStatuses.values().next().value;\n    return httpStatus;\n}\nfunction getHTTPStatusCodeFromError(error) {\n    return getStatusCodeFromKey(error.code);\n}\n\nconst noop = ()=>{\n// noop\n};\nfunction createInnerProxy(callback, path) {\n    const proxy = new Proxy(noop, {\n        get (_obj, key) {\n            if (typeof key !== 'string' || key === 'then') {\n                // special case for if the proxy is accidentally treated\n                // like a PromiseLike (like in `Promise.resolve(proxy)`)\n                return undefined;\n            }\n            return createInnerProxy(callback, [\n                ...path,\n                key\n            ]);\n        },\n        apply (_1, _2, args) {\n            const isApply = path[path.length - 1] === 'apply';\n            return callback({\n                args: isApply ? args.length >= 2 ? args[1] : [] : args,\n                path: isApply ? path.slice(0, -1) : path\n            });\n        }\n    });\n    return proxy;\n}\n/**\n * Creates a proxy that calls the callback with the path and arguments\n *\n * @internal\n */ const createRecursiveProxy = (callback)=>createInnerProxy(callback, []);\n/**\n * Used in place of `new Proxy` where each handler will map 1 level deep to another value.\n *\n * @internal\n */ const createFlatProxy = (callback)=>{\n    return new Proxy(noop, {\n        get (_obj, name) {\n            if (typeof name !== 'string' || name === 'then') {\n                // special case for if the proxy is accidentally treated\n                // like a PromiseLike (like in `Promise.resolve(proxy)`)\n                return undefined;\n            }\n            return callback(name);\n        }\n    });\n};\n\nexport { TRPC_ERROR_CODES_BY_NUMBER as T, createRecursiveProxy as a, getHTTPStatusCode as b, createFlatProxy as c, getHTTPStatusCodeFromError as g };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}